# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Account {
    bannerImage: Image
    bio: String
    createdAt: Float!
    email: String
    id: String!
    location: String
    platform: AccountPlatform!
    profileImage: Image
    role: AccountRole!
    updatedAt: Float!
    username: String!
}

type AuthOutput {
    id: String!
    username: String!
}

type ChangePasswordOutput {
    success: Boolean!
}

type DeletePlaceOutput {
    isDeleted: Boolean!
}

type EditProfileOutput {
    bannerImage: Image
    bio: String
    createdAt: Float!
    email: String
    id: String!
    location: String
    platform: AccountPlatform!
    profileImage: Image
    role: AccountRole!
    updatedAt: Float!
    username: String!
}

type GetBookmarkPlaceListOutput {
    items: [Place!]!
    total: Int!
}

type GetMyLikePlaceListOutput {
    items: [MyLikePlace!]!
    total: Int!
}

type GetPlaceListOutput {
    items: [Place!]!
    total: Int!
}

type GetProfileOutput {
    bannerImage: Image
    bio: String
    followedByCount: Int!
    followingCount: Int!
    id: String!
    isFollowed: Boolean!
    location: String
    platform: AccountPlatform!
    profileImage: Image
    username: String!
}

type Image {
    key: String!
    url: String!
}

type MeOutput {
    bannerImage: Image
    bio: String
    email: String
    id: String!
    location: String
    platform: AccountPlatform!
    profileImage: Image
    role: AccountRole!
    username: String!
}

type Mutation {
    changePassword(input: ChangePasswordInput!): ChangePasswordOutput!
    createPlace(input: CreatePlaceInput!): Place!
    createPlaceComment(input: CreatePlaceCommentInput!): PlaceComment!
    deletePlace(input: DeletePlaceInput!): DeletePlaceOutput!
    editProfile(input: EditProfileInput!): EditProfileOutput!
    signIn(input: SignInInput!): SignInOutput!
    signUp(input: SignUpInput!): SignUpOutput!
    toggleFollow(input: ToggleFollowInput!): ToggleFollowOutput!
    togglePlaceBookmark(input: TogglePlaceBookmarkInput!): TogglePlaceBookmarkOutput!
    togglePlaceLike(input: TogglePlaceLikeInput!): TogglePlaceLikeOutput!
}

type MyLikePlace {
    account: Account!
    address: String
    content: String!
    id: Int!
    likedAt: Float!
}

type Place {
    account: Account!
    address: String
    bookmarkCount: Int!
    buildingName: String
    comments: [PlaceComment!]!
    content: String!
    createdAt: Float!
    id: Int!
    images: [Image!]
    isBookmarked: Boolean!
    isLiked: Boolean!
    latitude: Float
    likeCount: Int!
    longitude: Float
    updatedAt: Float!
}

type PlaceComment {
    account: Account!
    content: String!
    createdAt: Float!
    id: Int!
    images: [Image!]!
    place: Place!
    updatedAt: Float!
}

type Query {
    auth: AuthOutput!
    getBookmarkPlaceList(input: GetBookmarkPlaceListInput!): GetBookmarkPlaceListOutput!
    getMyLikePlaceList(input: GetMyLikePlaceListInput!): GetMyLikePlaceListOutput!
    getPlace(input: GetPlaceInput!): Place!
    getPlaceList(input: GetPlaceListInput!): GetPlaceListOutput!
    getProfile(input: GetProfileInput!): GetProfileOutput!
    hello: String!
    me: MeOutput!
}

type SignInOutput {
    token: String!
}

type SignUpOutput {
    createdAt: Float!
    email: String
    id: String!
    username: String!
}

type ToggleFollowOutput {
    isFollowed: Boolean!
}

type TogglePlaceBookmarkOutput {
    isBookmarked: Boolean!
}

type TogglePlaceLikeOutput {
    isLiked: Boolean!
}

enum AccountPlatform {
    EMAIL
    KAKAO
}

enum AccountRole {
    ADMIN
    CLIENT
}

input ChangePasswordInput {
    currentPassword: String!
    newPassword: String!
    newPasswordConfirm: String!
}

input CreatePlaceCommentInput {
    accountId: String!
    content: String!
    images: [ImageInput!]!
    placeId: Int!
}

input CreatePlaceInput {
    address: String
    buildingName: String
    content: String!
    images: [ImageInput!]
    latitude: Float
    longitude: Float
}

input DeletePlaceInput {
    id: Int!
}

input EditProfileInput {
    bannerImage: ImageInput
    bio: String
    location: String
    profileImage: ImageInput
    username: String!
}

input GetBookmarkPlaceListInput {
    accountId: String!
    limit: Int = 10
    offset: Int = 0
}

input GetMyLikePlaceListInput {
    limit: Int = 10
    offset: Int = 0
}

input GetPlaceInput {
    id: Int!
}

input GetPlaceListInput {
    accountId: String
    bookmarkedAccountId: String
    limit: Int = 10
    offset: Int = 0
}

input GetProfileInput {
    id: String!
}

input ImageInput {
    key: String!
    url: String!
}

input SignInInput {
    email: String
    password: String
    "EMAIL, KAKAO"
    platform: String!
    platformAccessToken: String
}

input SignUpInput {
    email: String!
    password: String!
    username: String!
}

input ToggleFollowInput {
    id: String!
}

input TogglePlaceBookmarkInput {
    placeId: Int!
}

input TogglePlaceLikeInput {
    placeId: Int!
}
